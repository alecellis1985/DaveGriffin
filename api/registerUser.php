<?phpfunction registerUser() {  $request = Slim::getInstance()->request();  $user = getArrayFromRequest($request);  $conn = new ConexionBD(DRIVER, SERVIDOR, BASE, USUARIO, CLAVE);  echo insertNewUser($conn, $user);}function insertNewUser($conn, $user) {  $response = null;  if ($conn->conectar()) {    try {      $conn->beginTransaction();      $sql = "INSERT INTO user (type, src, landing_page, first_name, last_name, state, zip, "              . "email ,primary_phone, ip_address, Debt, Channel, Redirect_URL)"              . "VALUES (:type, :src, :landing_page, :first_name, :last_name, :state, :zip, "              . " :email, :primary_phone, :ip_address, :Debt, :Channel, :Redirect_URL)";      $params = setUserParams($user, false);      if ($conn->consulta($sql, $params)) {        $user['id'] = $conn->ultimoIdInsert();        $conn->closeCursor();        $conn->commitTransaction();        $response = MessageHandler::getSuccessResponse("Data successfuly saved!", $user);      } else {        echo MessageHandler::getErrorResponse("Data was not save correctly, please try again later.");      }    } catch (Exception $exc) {      $response = null;      $conn->rollbackTransaction();    }  }  if ($response == null) {    header('HTTP/1.1 400 Bad Request');    return MessageHandler::getDBErrorResponse();  } else {    $conn->desconectar();    return $response;  }}function getArrayFromRequest($request) {  return array(      "type" => is_null($request->post('type')) ? "" : $request->post('type'),      "first_name" => is_null($request->post('first_name')) ? "" : $request->post('first_name'),      "last_name" => is_null($request->post('last_name')) ? "" : $request->post('last_name'),      "email" => is_null($request->post('email')) ? "" : $request->post('email'),      "state" => is_null($request->post('state')) ? "" : $request->post('state'),      "zip" => is_null($request->post('zip')) ? "" : $request->post('zip'),      "email" => is_null($request->post('email')) ? "" : $request->post('email'),      "primary_phone" => is_null($request->post('primary_phone')) ? "" : $request->post('primary_phone'),      "Debt" => is_null($request->post('Debt')) ? "" : $request->post('Debt'),      "Channel" => is_null($request->post('Channel')) ? "" : $request->post('Channel'),      "Redirect_URL" => $request->post('Redirect_URL') == 'null' ? NULL : $request->post('Redirect_URL')  );}function setUserParams($user) {  $params = array();  $params[0] = array("type", (int) $user['type'], "int", 11);  $params[1] = array("src", "WL-DebtWF", "string", 100);  $params[2] = array("landing_page", "landing", "string", 100);  $params[3] = array("first_name", $user['first_name'], "string", 100);  $params[4] = array("last_name", $user['last_name'], "string", 100);  $params[5] = array("state", $user['state'], "string", 2);  $params[6] = array("zip", $user['zip'], "string", 5);  $params[7] = array("email", $user['email'], "string", 100);  $params[8] = array("primary_phone", $user['primary_phone'], "string", 10);  $params[9] = array("ip_address", RemoteAddress::getIpAddress(), "string", 45);  $params[10] = array("Debt", (int) $user['Debt'], "int", 11);  $params[11] = array("Channel", $user['Channel'], "string", 100);  $params[12] = array("Redirect_URL", $user['Redirect_URL'], "string", 45);  return $params;}